-----------------------------------------------------------------------------------------
Crear proyecto: Formula Panadera en React con PWA
-----------------------------------------------------------------------------------------
    > npx create-react-app react_bakery_pwa_app --template cra-template-pwa
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
Dependencias:
-----------------------------------------------------------------------------------------
  - npm i bootstrap
  - npm i axios
  - npm i uuidv4

  - Configurar ambiente
  - Definir estilos para PWA

  - publicar: npm start
-----------------------------------------------------------------------------------------
  - CND:
   -> <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
   -> <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
-----------------------------------------------------------------------------------------
  - Crear carpetas:
    - assets
    - components
    - services
    - store
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
Customizar colores de bootstrap:
-----------------------------------------------------------------------------------------
  - D:\WorkSpace\WS_PERSONAL_PROGRAMS\react_bakery_pwa_app\src\custom.scss
        /* custom.scss */
        $theme-colors: ("primary": #dcdcdc,
            "secondary": #198754,
            "custom-primary": #dcdcdc,
            "custom-secondary": #01bc45,
            "custom-success": #C00000,
            "custom-info": #86e5f4,
            "custom-warning": #c8e6fc,
            "custom-danger": #E3E3E3,
            "custom-light": #F0F0F0,
            "custom-dark": #000809,
            "custom-white": #ffffff,
        );
        $border-radius: 10rem;

        @import 'bootstrap/scss/bootstrap';

    - D:\WorkSpace\WS_PERSONAL_PROGRAMS\react_bakery_pwa_app\src\index.js
        import "./custom.scss";
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
  Conectar NODEJS para consumir servicios API 
 -----------------------------------------------------------------------------------------
 * Definir url de conexion a nodejs:
 -----------------------------------
  - react_bakery_pwa_app\public\runtime-config.js 
    window["runConfig"] = {
      BACKEND_URL: "http://localhost:8585/api",
    };

  - react_bakery_pwa_app\public\index.html
      ...
        <script src="%PUBLIC_URL%/runtime-config.js"></script>
      ...

 * Crear Servicios:
 ------------------
  - react_bakery_pwa_app\src\services\axios\http-common.js
    import axios from "axios";

    const { BACKEND_URL } = window["runConfig"];

    const instance = axios.create({
      baseURL: BACKEND_URL,
      headers: {
        "Content-type": "application/json",
      },
    });

    export default instance;

  - react_bakery_pwa_app\src\services\flour.service.js
      import http from "./axios/http-common";

      class FlourDataService {
        get() {
          return http.get("/flours");
        }

        create(data) {
          return http.post("/flours", data);
        }

        update(data) {
          return http.put("/flours", data);
        }

        delete(id) {
          return http.delete("/flours/" + id);
        }
      }

    export default new FlourDataService();

  - Ejemplo de consumo de un servicio:
    ...
      useEffect(() => {
        console.log("Harinas: ", FlourService.get());
      }, []);
    ...

 -----------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------